{"version":3,"sources":["components/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","isHidden","goods","props","reverse","setState","sortByAlph","sort","a","b","localeCompare","reset","sortByLength","length","sortBySelectedLength","event","value","target","filter","item","this","options","Array","from","e","i","type","onClick","map","key","onChange","number","React","Component","goodsFromServer","App","className","ReactDOM","render","document","getElementById"],"mappings":"oOAmHeA,E,4MA/GbC,MAAQ,CACNC,UAAU,EACVC,MAAM,YAAK,EAAKC,MAAMD,Q,EAGxBE,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAOF,EAAME,MAAME,e,EAIvBE,WAAa,WACX,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAOF,EAAME,MAAMK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAItDE,MAAQ,WACN,EAAKN,SAAS,CAAEH,MAAM,YAAK,EAAKC,MAAMD,U,EAGxCU,aAAe,WACb,EAAKP,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAOF,EAAME,MAAMK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,e,EAInDC,qBAAuB,SAACC,GAAW,IACzBC,EAAUD,EAAME,OAAhBD,MAER,EAAKX,SACH,CAAEH,MAAO,EAAKC,MAAMD,MAAMgB,QAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUG,Q,uDAIlD,IAAD,SACqBI,KAAKpB,MAAzBC,EADD,EACCA,SAAUC,EADX,EACWA,MACZmB,EAAUC,MAAMC,KAAKD,MAAM,KAAK,SAACE,EAAGC,GAAJ,OAAUA,EAAI,KAEpD,OACE,6BACGxB,GAEG,4BACEyB,KAAK,SACLC,QAAS,WACP,EAAKtB,SAAS,CAAEJ,UAAU,MAH9B,UAUFA,GAEE,oCACE,4BACGC,EAAM0B,KAAI,SAAAT,GAAI,OACb,wBAAIU,IAAKV,GACNA,OAIP,4BACEO,KAAK,SACLC,QAASP,KAAKhB,SAFhB,WAMA,4BACEsB,KAAK,SACLC,QAASP,KAAKd,YAFhB,uBAMA,4BACEoB,KAAK,SACLC,QAASP,KAAKT,OAFhB,SAMA,4BACEe,KAAK,SACLC,QAASP,KAAKR,cAFhB,kBAMA,4BACEkB,SAAUV,KAAKN,sBAEdO,EAAQO,KAAI,SAAAG,GAAM,OACjB,4BACEF,IAAKE,EACLf,MAAOe,GAENA,a,GAhGGC,IAAMC,WCCxBC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAUaC,EAPH,kBACV,yBAAKC,UAAU,OACb,qCACA,kBAAC,EAAD,CAAWlC,MAAOgC,MChBtBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.251f27ec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodsList extends React.Component {\n  state = {\n    isHidden: true,\n    goods: [...this.props.goods],\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: state.goods.reverse(),\n    }));\n  }\n\n  sortByAlph = () => {\n    this.setState(state => ({\n      goods: state.goods.sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  reset = () => {\n    this.setState({ goods: [...this.props.goods] });\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: state.goods.sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  sortBySelectedLength = (event) => {\n    const { value } = event.target;\n\n    this.setState(\n      { goods: this.props.goods.filter(item => item.length >= value) },\n    );\n  }\n\n  render() {\n    const { isHidden, goods } = this.state;\n    const options = Array.from(Array(10), (e, i) => i + 1);\n\n    return (\n      <div>\n        {isHidden\n          && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ isHidden: false });\n              }}\n            >\n              Start\n            </button>\n          )\n        }\n        {!isHidden\n          && (\n            <>\n              <ul>\n                {goods.map(item => (\n                  <li key={item}>\n                    {item}\n                  </li>\n                ))}\n              </ul>\n              <button\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.sortByAlph}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n              <select\n                onChange={this.sortBySelectedLength}\n              >\n                {options.map(number => (\n                  <option\n                    key={number}\n                    value={number}\n                  >\n                    {number}\n                  </option>\n                ))}\n              </select>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport GoodsList from './components/GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <GoodsList goods={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}