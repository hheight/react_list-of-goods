{"version":3,"sources":["components/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","isHidden","goods","props","defaultSelectValue","options","Array","keys","map","x","reverse","setState","sortByAlph","sort","a","b","localeCompare","reset","sortByLength","length","setSelectValue","event","target","value","this","type","onClick","filter","item","key","onChange","number","React","Component","goodsFromServer","App","className","ReactDOM","render","document","getElementById"],"mappings":"oOA2HeA,E,4MAvHbC,MAAQ,CACNC,UAAU,EACVC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,mBAAoB,G,EAGtBC,QAAU,YAAIC,MAAM,IAAIC,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAI,K,EAE7CC,QAAU,WACR,EAAKC,UAAS,SAAAX,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOQ,e,EAI5BE,WAAa,WACX,EAAKD,UAAS,SAAAX,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI3DE,MAAQ,WACN,EAAKN,SACH,CACET,MAAM,YAAK,EAAKC,MAAMD,OACtBE,mBAAoB,K,EAK1Bc,aAAe,WACb,EAAKP,UAAS,SAAAX,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,e,EAIxDC,eAAiB,SAACC,GAChB,EAAKV,SAAS,CACZP,mBAAoBiB,EAAMC,OAAOC,S,uDAI3B,IAAD,SACyCC,KAAKxB,MAA7CC,EADD,EACCA,SAAUC,EADX,EACWA,MAAOE,EADlB,EACkBA,mBAEzB,OACE,6BACGH,GAEG,4BACEwB,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEV,UAAU,MAH9B,UAUFA,GAEE,oCACE,4BACGC,EACEyB,QAAO,SAAAC,GAAI,OAAIA,EAAKT,QAAUf,KAC9BI,KAAI,SAAAoB,GAAI,OACP,wBAAIC,IAAKD,GACNA,OAIT,4BACEH,KAAK,SACLC,QAASF,KAAKd,SAFhB,WAMA,4BACEe,KAAK,SACLC,QAASF,KAAKZ,YAFhB,uBAMA,4BACEa,KAAK,SACLC,QAASF,KAAKP,OAFhB,SAMA,4BACEQ,KAAK,SACLC,QAASF,KAAKN,cAFhB,kBAMA,4BACEY,SAAUN,KAAKJ,eACfG,MAAOnB,GAENoB,KAAKnB,QAAQG,KAAI,SAAAuB,GAAM,OACtB,4BACEF,IAAKE,EACLR,MAAOQ,GAENA,a,GAxGGC,IAAMC,WCCxBC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAUaC,EAPH,kBACV,yBAAKC,UAAU,OACb,qCACA,kBAAC,EAAD,CAAWlC,MAAOgC,MChBtBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3729ad51.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodsList extends React.Component {\n  state = {\n    isHidden: true,\n    goods: [...this.props.goods],\n    defaultSelectValue: 1,\n  }\n\n  options = [...Array(10).keys()].map(x => x + 1);\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  sortByAlph = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  reset = () => {\n    this.setState(\n      {\n        goods: [...this.props.goods],\n        defaultSelectValue: 1,\n      },\n    );\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  setSelectValue = (event) => {\n    this.setState({\n      defaultSelectValue: event.target.value,\n    });\n  }\n\n  render() {\n    const { isHidden, goods, defaultSelectValue } = this.state;\n\n    return (\n      <div>\n        {isHidden\n          && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ isHidden: false });\n              }}\n            >\n              Start\n            </button>\n          )\n        }\n        {!isHidden\n          && (\n            <>\n              <ul>\n                {goods\n                  .filter(item => item.length >= defaultSelectValue)\n                  .map(item => (\n                    <li key={item}>\n                      {item}\n                    </li>\n                  ))}\n              </ul>\n              <button\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.sortByAlph}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n              <select\n                onChange={this.setSelectValue}\n                value={defaultSelectValue}\n              >\n                {this.options.map(number => (\n                  <option\n                    key={number}\n                    value={number}\n                  >\n                    {number}\n                  </option>\n                ))}\n              </select>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport GoodsList from './components/GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <GoodsList goods={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}